name: Test application

on:
  push:
  pull_request:
    types: [reopened]

env:
  PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
  PUSHER_KEY: ${{ secrets.PUSHER_KEY }}
  PUSHER_SECRET: ${{ secrets.PUSHER_SECRET }}
  PUSHER_CLUSTER: ${{ secrets.PUSHER_CLUSTER }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.11"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.3.1
          virtualenvs-create: false
          installer-parallel: true

      - name: Install dependencies
        run: |
          sudo apt-get install -y gettext
          python -m pip install --upgrade pip
          poetry install --with dev

      - name: Run tests
        run: |
          black .
          flake8 .
          isort .
          mypy .

      - name: Generate config files
        run: |
          ./scripts/create-env.sh

      - name: Compile translations
        run: |
          python manage.py compilemessages -l en_US

      - name: Generate coverage report
        run: |
          coverage run --source="." manage.py test --settings=server.settings.ci
          coverage xml

      - name: Upload test coverage report (Codecov)
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml

      - name: Upload test coverage report (Code Climate)
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: coverage report
